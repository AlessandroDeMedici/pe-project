[General]
network = CloudSystem

# Mapping local RNG to global RNG
num-rngs = 4
**.taskGenerator.rng-0 = 0
**.taskGenerator.rng-1 = 1
**.cloudNode.rng-0 = 2
**.backendServer.rng-0 = 3

sim-time-limit = 100000s
warmup-period = 0s

seed-set = ${repetition}

# Reduce resolution for longer simulations
#simtime-resolution = ns

[Config verificationDegeneracyTest]
repeat = 5

**.*DistributionType = 1

**.taskGenerator.T = 1s

**.cloudNode.N = 10
**.taskGenerator.I = 0.1
**.cloudNode.R = 100000
**.cloudNode.fairSharing = ${false, true}

**.backendServer.S = 0.1Hz

**.cloudNode.p = 0.5


[Config warmupPriod]
repeat = 10000
sim-time-limit = 1000s
warmup-period = 0s

**sink**.result-recording-modes = +vector
**cloudNode.cloudNodeStatActiveVM.result-recording-modes = +vector
**backendServer.backendStatCPU.result-recording-modes = +vector

**.cloudNode.fairSharing = ${fairSharing=false}
**.*DistributionType = 1

**.taskGenerator.T = 1s
**.cloudNode.N = 10
**.taskGenerator.I = 2000
**.cloudNode.R = 2500
**.backendServer.S = 1Hz
**.cloudNode.p = 0.5


[Config autocorrelation]
repeat = 1
sim-time-limit = 1000000s
warmup-period = 400s

**sink**.result-recording-modes = +vector

**.cloudNode.fairSharing = ${fairSharing=true}
**.*DistributionType = 1


**.taskGenerator.T = 1.2s
**.cloudNode.N = 10
**.taskGenerator.I = 2000
**.cloudNode.R = 2500
**.backendServer.S = 1Hz
**.cloudNode.p = 0.5


[Config stability]
repeat = 1
sim-time-limit = 400000s
warmup-period = 40000s

*.variable = ${v=1..6}
*.range = ${r=1..100}

**.cloudNode.fairSharing = ${fairSharing=false, true}
**.*DistributionType = ${distr=1}

**.taskGenerator.T = ${(${v}==1)?${r}s/200+0.795s:1s}

**.cloudNode.N = ${(${v}==2)?${r}:10}
**.taskGenerator.I = ${(${v}==3) ? ${r}*10+1500:2000}
**.cloudNode.R = ${(${v} == 4)?${r}*10+1990:2500}

**.backendServer.S = ${(${v} == 5)?${r}Hz/200+0.495Hz:1Hz}

**.cloudNode.p = ${(${v}==6)?${r}/400+0.75:0.5}


[Config interestPoint]
repeat = 1
sim-time-limit = 200000s
warmup-period = 400s

**sink**.result-recording-modes = +vector
**cloudNode.cloudNodeStatActiveVM.result-recording-modes = +vector
**backendServer.backendStatCPU.result-recording-modes = +vector
**cloudNode.cloudNodeStatNq.result-recording-modes = +vector, +vector(timeavg)

**.cloudNode.fairSharing = ${fairSharing=false}
**.*DistributionType = ${distr=1}

**.taskGenerator.T = 0.8s

**.cloudNode.N = 10
**.taskGenerator.I = 2000
**.cloudNode.R = 2500

**.backendServer.S = 1Hz

**.cloudNode.p = 0.5


[Config dataAnalysis]
repeat = 1
sim-time-limit = 100000s
warmup-period = 400s

**sink**.result-recording-modes = +vector
**cloudNode.cloudNodeStatInterDepartureTime.result-recording-modes = +vector

**.cloudNode.fairSharing = ${fairSharing=false, true}
**.*DistributionType = ${distr=0,1}

**.taskGenerator.T = 1s
**.taskGenerator.I = 2000

**.cloudNode.R = 2500
**.cloudNode.N = ${N=1..100}
**.cloudNode.p = ${p=0.5}

**.backendServer.S = 1 Hz


[Config queueAnalysis]
repeat = 100
sim-time-limit = 10000s
warmup-period = 400s

**.cloudNode.fairSharing = ${fairSharing=false, true}
**.*DistributionType = ${distr=1}

**.taskGenerator.T = 1s
**.taskGenerator.I = 2000

**.cloudNode.R = 2500
**.cloudNode.N = ${N=1..100}
**.cloudNode.p = ${p=0.5}

**.backendServer.S = 1 Hz




[Config additionalTest]
repeat = 1
sim-time-limit = 1000000s
warmup-period = 400s

**sink**.result-recording-modes = +vector
#**cloudNode.cloudNodeStatInterDepartureTime.result-recording-modes = +vector

**.cloudNode.fairSharing = ${fairSharing=true,false}
**.*DistributionType = ${distr=0,1}

**.taskGenerator.T = 1s
**.taskGenerator.I = 2000

**.cloudNode.R = 2500
**.cloudNode.N = ${N=1..300 step 50}
**.cloudNode.p = ${p=0.5}

**.backendServer.S = 1 Hz